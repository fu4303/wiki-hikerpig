const path = require("path")
const fs = require("fs")

const cwd = process.cwd();

const GEN_END_MARK = 'end-generated'

const dirs = fs.readdirSync(process.cwd())
  .filter((d) => {
    return (
      (!d.startsWith('.'))
      && (!d.startsWith('_'))
    )
  })

dirs.forEach((dir) => {
  const fileNames = []
  const dirStat = fs.statSync(dir);
  if (dirStat.isDirectory()) {
    fs.readdirSync(path.join(cwd, dir))
      .forEach((n) => {
        const fileName = path.join(dir, n)
        const ext = path.extname(fileName)
        const stat = fs.statSync(fileName)
        if (stat.isFile() && ext === '.md') {
          fileNames.push(fileName)
        }
      })
    // console.log(fileNames)
    const outputFileName = `${dir}-index.md`
    console.log('Will update', outputFileName)

    const generatedContent = `${dir} index
===
#folder-index

Generated by script \`gen-folder-summary.js\`

${
  fileNames.map((p) => {
    const name = path.basename(p).replace(/\..*$/, '')
    return `- [[${name}]]`
  }).join('\n')
}
<!--${GEN_END_MARK}-->
`

    let content = generatedContent;
    const hasFormerFile = fs.existsSync(outputFileName);
    if (hasFormerFile) {
      const oldContentLines = fs.readFileSync(outputFileName).toString().split('\n');
      for (let lineNumber = 0; lineNumber < oldContentLines.length; lineNumber++) {
        const lineContent = oldContentLines[lineNumber];
        if (lineContent.indexOf(GEN_END_MARK) > -1) {
          content = generatedContent + oldContentLines.slice(lineNumber + 1).join('\n')
          break
        }
      }
    }
    fs.writeFile(path.join(outputFileName), content, () => {})
  }
})
